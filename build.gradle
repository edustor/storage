import org.ajoberstar.grgit.Grgit

import java.time.Instant

buildscript {
    ext.kotlin_version = '1.0.6'
    ext.spring_boot_version = '1.4.1.RELEASE'
    ext.edustor_commons_version = '6d523bc'

    repositories {
        mavenCentral()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath 'org.junit.platform:junit-platform-gradle-plugin:1.0.0-M3'
        classpath "org.springframework.boot:spring-boot-gradle-plugin:$spring_boot_version"
        classpath 'org.ajoberstar:gradle-git:1.6.0'
    }
}

plugins {
    id "com.palantir.configuration-resolver" version "0.1.0"
}

apply plugin: 'java'
apply plugin: 'kotlin'
apply plugin: 'org.junit.platform.gradle.plugin'
apply plugin: 'spring-boot'

group 'ru.edustor'
version '0.8-m3'

repositories {
    mavenCentral()
    maven { url 'https://jitpack.io' }
}

configurations {
    all*.exclude group: "log4j"
}

//noinspection GroovyAssignabilityCheck
jar {
    destinationDir = new File(buildDir, "/dist")
    archiveName = "edustor-upload.jar"
}

ext {
    def grgit = Grgit.open()
    shortCommitId = grgit.head().getAbbreviatedId()
    commitId = grgit.head().id
}

task createProperties(dependsOn: processResources) {
    doLast {
        new File("$buildDir/resources/main/build.properties").withWriter { w ->
            def p = new Properties()
            p['edustor.build.name'] = "Edustor Upload"
            p['edustor.build.version'] = "${project.version}-$shortCommitId".toString()
            p['edustor.build.date'] = Instant.now().epochSecond.toString()
            p['edustor.build.commitId'] = commitId
            p['edustor.build.repo'] = "https://github.com/edustor/upload"
            p.store(w, null)
        }
    }
}
processResources.finalizedBy createProperties

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    compile 'io.minio:minio:2.0.4'
    compile 'com.squareup.okhttp3:okhttp:3.5.0'

    compile "org.springframework.boot:spring-boot-autoconfigure"
    compile "org.springframework.boot:spring-boot-starter-logging"
    compile "org.springframework.boot:spring-boot-starter-web"
    compile "org.springframework.boot:spring-boot-starter-amqp"
    compile "org.springframework.boot:spring-boot-starter-data-jpa"

    compile 'org.postgresql:postgresql:9.4.1211'

    compile "ru.edustor.commons:storage:$edustor_commons_version"
    compile "ru.edustor.commons:auth:$edustor_commons_version"
    compile "ru.edustor.commons:rabbit:$edustor_commons_version"
    compile "ru.edustor.commons:models:$edustor_commons_version"
    compile "ru.edustor.commons:version:$edustor_commons_version"


    testCompile "org.junit.jupiter:junit-jupiter-api:5.0.0-M3"
    testRuntime "org.junit.jupiter:junit-jupiter-engine:5.0.0-M3"
    testCompile "org.mockito:mockito-core:2.+"
}